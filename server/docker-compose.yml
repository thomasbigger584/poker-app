name: 'poker-app'

# --- Common ---
x-network: &network
  network_mode: service:tailscale

x-common-extra: &common-extra
  restart: on-failure
  logging:
    driver: "json-file"
    options:
      max-size: "5k"
      max-file: "5"
      compress: "true"

services:

  # --- Network ---
  tailscale:
    extends:
      file: tailscale/docker-compose.yml
      service: tailscale-base
    <<: [ *common-extra ]
  nginx:
    extends:
      file: nginx/docker-compose.yml
      service: nginx-base
    depends_on:
      tailscale:
        condition: service_healthy
    <<: [ *network, *common-extra ]


  # --- Database ---
  postgres:
    extends:
      file: postgres/docker-compose.yml
      service: postgres-base
    depends_on:
      tailscale:
        condition: service_healthy
    <<: [ *network, *common-extra ]
  pgadmin:
    extends:
      file: postgres/docker-compose.yml
      service: pgadmin-base
    depends_on:
      postgres:
        condition: service_healthy
    <<: [ *network, *common-extra ]


  # --- MQ ---
  rabbitmq:
    extends:
      file: rabbitmq/docker-compose.yml
      service: rabbitmq-base
    depends_on:
      tailscale:
        condition: service_healthy
    <<: [ *network, *common-extra ]


  # --- Auth ---
  keycloak:
    extends:
      file: keycloak/docker-compose.yml
      service: keycloak-base
    depends_on:
      tailscale:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    <<: [ *network, *common-extra ]


  # --- App ---
  api:
    extends:
      file: api/docker-compose.yml
      service: api-base
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    <<: [ *network, *common-extra ]

  # --- Volumes ---
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  tailscale_data:
    driver: local